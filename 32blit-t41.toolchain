set(CMAKE_SYSTEM_NAME Generic)
set(CMAKE_SYSTEM_PROCESSOR arm)

set(CMAKE_C_COMPILER arm-none-eabi-gcc CACHE PATH "Path to C compiler")
set(CMAKE_CXX_COMPILER arm-none-eabi-g++ CACHE PATH "Path to C++ compiler")

set(CMAKE_SIZE arm-none-eabi-size CACHE PATH "Path to size tool")
set(CMAKE_READELF arm-none-eabi-readelf CACHE PATH "Path to readelf tool")
set(CMAKE_RANLIB arm-none-eabi-gcc-ranlib CACHE PATH "Path to ranlib")
set(CMAKE_AR arm-none-eabi-gcc-ar CACHE PATH "Path to ar")
set(CMAKE_OBJCOPY arm-none-eabi-objcopy CACHE PATH "Path to objcopy")
set(CMAKE_LINKER arm-none-eabi-ld CACHE PATH "Path to linker")


set(MCU_LINKER_SCRIPT imxrt1062_t41.ld)
set(MCU_ARCH cortex-m7)
set(MCU_FLOAT_ABI hard)
set(MCU_FPU fpv5-d16)
set(MCU_FLAGS "-mcpu=${MCU_ARCH} -mthumb -mfloat-abi=${MCU_FLOAT_ABI}")

if (MCU_FLOAT_ABI STREQUAL hard)
    set(MCU_FLAGS "${MCU_FLAGS} -mfpu=${MCU_FPU}")
endif ()

set(COMMON_FLAGS "${MCU_FLAGS} -Wall -fdata-sections -ffunction-sections")

set(CMAKE_C_FLAGS_INIT "${COMMON_FLAGS}")
set(CMAKE_CXX_FLAGS_INIT "${COMMON_FLAGS} -felide-constructors -fno-exceptions -fno-rtti")
set(CMAKE_C_FLAGS_DEBUG_INIT "-g -Og")
set(CMAKE_CXX_FLAGS_DEBUG_INIT "-g -Og")
set(CMAKE_EXE_LINKER_FLAGS_INIT "-specs=nosys.specs -Wl,--gc-sections,--relax")

add_definitions(-DTARGET_32BLIT_TEENSY)
set(32BLIT_HW_TEENSY 1)
set(32BLIT_PATH ${CMAKE_CURRENT_LIST_DIR} CACHE PATH "Path to 32blit.cmake")
